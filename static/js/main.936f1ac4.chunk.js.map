{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReverseField","reorderedGoods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetButtonVisible","className","type","cn","onClick","Reversed","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAmBC,EAAnB,KAOMC,EAjCD,YAEJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,UAAOT,GAkBzB,OAhBAS,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAIR,IAAaL,EAASc,SACjBF,EAAEG,cAAcF,GAGrBR,IAAaL,EAASgB,OACjBJ,EAAEK,OAASJ,EAAEI,OAGf,KAGLV,GACFG,EAAaQ,UAGRR,EAYgBS,CAAkB,CAAEd,WAAUE,eAC/Ca,EAAwBf,IAAaL,EAASI,MAAQG,EAE5D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZ,kBAAkB,EAClB,WAAYlB,IAAaL,EAASc,WAEpCU,QAAS,kBAAMlB,EAAYN,EAASc,WANtC,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,CACZ,qBAAqB,EACrB,WAAYlB,IAAaL,EAASgB,SAEpCQ,QAAS,kBAAMlB,EAAYN,EAASgB,SANtC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IAAG,CACZ,qBAAqB,EACrB,YAA2B,IAAfhB,IAEdiB,QAAS,kBAAMhB,GAAgB,SAAAiB,GAAQ,OAAKA,MAN9C,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA/CjBlB,EAAYN,EAASI,WACrBI,GAAgB,IA2CV,sBAUJ,6BACGC,EAAeiB,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9G7CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.936f1ac4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((a, b) => {\n    if (sortType === SortType.ALPHABET) {\n      return a.localeCompare(b);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return a.length - b.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverseField] = useState(false);\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setReverseField(false);\n  };\n\n  const reorderedGoods = getReorderedGoods({ sortType, isReversed });\n  const isResetButtonVisible = (sortType !== SortType.NONE || isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-info': true,\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-success': true,\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-warning': true,\n            'is-light': isReversed !== true,\n          })}\n          onClick={() => setReverseField(Reversed => !Reversed)}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleReset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map(item => <li key={item} data-cy=\"Good\">{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}